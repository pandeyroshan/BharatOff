# Generated by Django 3.0.4 on 2020-10-27 16:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=1000, verbose_name='Address')),
                ('mail', models.EmailField(max_length=1000, verbose_name='Email Address')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Phone Number')),
            ],
            options={
                'verbose_name': 'Address and Details',
                'verbose_name_plural': 'Address and Details',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='CityData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(blank=True, max_length=300, verbose_name='City Name')),
                ('lat', models.FloatField(blank=True, default=0.0, verbose_name='Lattitude')),
                ('lon', models.FloatField(blank=True, default=0.0, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Cities',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='MarketingSources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=200)),
                ('counter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Marketing Sources',
                'verbose_name_plural': 'Marketing Sources',
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('email', models.EmailField(max_length=500)),
                ('subject', models.CharField(max_length=1000)),
                ('text', models.TextField()),
            ],
            options={
                'verbose_name': 'Messages',
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.CreateModel(
            name='VisitCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Counter',
            },
        ),
        migrations.CreateModel(
            name='WebCounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Website Count',
                'verbose_name_plural': 'Website Count',
            },
        ),
        migrations.CreateModel(
            name='Visitors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.IntegerField(default=0)),
                ('city', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='management.CityData')),
            ],
            options={
                'verbose_name': 'Visitor Counts',
                'verbose_name_plural': 'Visitor Counts',
            },
        ),
        migrations.CreateModel(
            name='StateData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=300, verbose_name='State Name')),
                ('cities', models.ManyToManyField(blank=True, to='management.CityData')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'State',
            },
        ),
        migrations.CreateModel(
            name='MiniLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('lat', models.FloatField(verbose_name='Latitude')),
                ('lon', models.FloatField(verbose_name='Longitude')),
                ('main_city', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='management.CityData')),
            ],
            options={
                'verbose_name': 'Mini Locations',
                'verbose_name_plural': 'Mini Locations',
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=300)),
                ('heading', models.CharField(max_length=300, verbose_name='Heading')),
                ('phone_number', models.CharField(max_length=1000, verbose_name='Phone Number')),
                ('whatsapp_link', models.URLField(blank=True, max_length=1000, verbose_name='Whatsapp URL')),
                ('img', models.ImageField(upload_to='img/')),
                ('location', models.URLField(blank=True, max_length=50000, verbose_name='Google Location URL')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=False)),
                ('activated_till', models.DateField(default=django.utils.timezone.now)),
                ('MiniLocation', models.ManyToManyField(to='management.MiniLocation')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Category')),
                ('city', models.ManyToManyField(to='management.CityData')),
                ('user', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Offers',
                'verbose_name_plural': 'Offers',
            },
        ),
    ]

# Generated by Django 3.0.4 on 2021-08-13 07:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=1000, verbose_name='Address')),
                ('mail', models.EmailField(max_length=1000, verbose_name='Email Address')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Phone Number')),
            ],
            options={
                'verbose_name': 'Address and Details',
                'verbose_name_plural': 'Address and Details',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('img', models.ImageField(blank=True, upload_to='img/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='CityData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(blank=True, max_length=300, verbose_name='City Name')),
                ('lat', models.FloatField(blank=True, default=0.0, verbose_name='Lattitude')),
                ('lon', models.FloatField(blank=True, default=0.0, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Cities',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_purchase', models.IntegerField(default=0)),
                ('discount', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Discount',
                'verbose_name_plural': 'Discount',
            },
        ),
        migrations.CreateModel(
            name='FileTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(null=True, upload_to='img/', verbose_name='Image 1')),
            ],
            options={
                'verbose_name': 'Testing Image File Upload',
                'verbose_name_plural': 'Testing Image File',
            },
        ),
        migrations.CreateModel(
            name='MarketingSources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=200)),
                ('counter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Marketing Sources',
                'verbose_name_plural': 'Marketing Sources',
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('email', models.EmailField(max_length=500)),
                ('subject', models.CharField(max_length=1000)),
                ('text', models.TextField()),
            ],
            options={
                'verbose_name': 'Messages',
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.CreateModel(
            name='PackageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.IntegerField(default=0)),
                ('total_phamplet', models.IntegerField(default=0)),
                ('total_videos', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Packages',
                'verbose_name_plural': 'Packages',
            },
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='img/', verbose_name='Image 1')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Codeword')),
                ('keyword', models.TextField()),
            ],
            options={
                'verbose_name': 'Image Resources',
                'verbose_name_plural': 'Image Resources',
            },
        ),
        migrations.CreateModel(
            name='SocialAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True)),
            ],
            options={
                'verbose_name': 'Social Accounts',
                'verbose_name_plural': 'Social Accounts',
            },
        ),
        migrations.CreateModel(
            name='VisitCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Counter',
            },
        ),
        migrations.CreateModel(
            name='WebCounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Website Count',
                'verbose_name_plural': 'Website Count',
            },
        ),
        migrations.CreateModel(
            name='Visitors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.IntegerField(default=0)),
                ('city', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='management.CityData')),
            ],
            options={
                'verbose_name': 'Visitor Counts',
                'verbose_name_plural': 'Visitor Counts',
            },
        ),
        migrations.CreateModel(
            name='StateData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=300, verbose_name='State Name')),
                ('cities', models.ManyToManyField(blank=True, to='management.CityData')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'State',
            },
        ),
        migrations.CreateModel(
            name='ShopDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(max_length=1000)),
                ('owner_name', models.CharField(max_length=1000)),
                ('gst_no', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(max_length=1000)),
                ('whatsapp_number', models.CharField(max_length=1000)),
                ('address', models.CharField(max_length=1000)),
                ('city', models.CharField(max_length=100)),
                ('minilocation', models.CharField(blank=True, max_length=100)),
                ('email_address', models.CharField(max_length=1000)),
                ('products', models.TextField()),
                ('total_eligible_customer', models.IntegerField(default=0)),
                ('package_amount', models.IntegerField(default=1)),
                ('transaction_id', models.CharField(max_length=1000)),
                ('image_file1', models.ImageField(blank=True, null=True, upload_to='img/', verbose_name='Image 1')),
                ('comment1', models.CharField(blank=True, max_length=1000)),
                ('image_file2', models.ImageField(blank=True, null=True, upload_to='img/', verbose_name='Image 2')),
                ('comment2', models.CharField(blank=True, max_length=1000)),
                ('image_file3', models.ImageField(blank=True, null=True, upload_to='img/', verbose_name='Image 3')),
                ('comment3', models.CharField(blank=True, max_length=1000)),
                ('image_file4', models.ImageField(blank=True, null=True, upload_to='img/', verbose_name='Image 4')),
                ('comment4', models.CharField(blank=True, max_length=1000)),
                ('payment_verified', models.BooleanField(default=False)),
                ('date_of_registration', models.DateField(default=django.utils.timezone.now)),
                ('invoice_no', models.CharField(blank=True, max_length=100)),
                ('covered_under_reward', models.BooleanField(default=False)),
                ('covered_under_monthly_reward', models.BooleanField(default=False)),
                ('sales_profit', models.FloatField(default=0)),
                ('forward_to_freelancer', models.BooleanField(default=False)),
                ('final_pamphlet', models.ImageField(blank=True, null=True, upload_to='img/', verbose_name='Final Design')),
                ('design_approved', models.BooleanField(default=False)),
                ('freelancer_profit', models.IntegerField(default=0)),
                ('business_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='management.Category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('discounts', models.ManyToManyField(to='management.Discount')),
            ],
            options={
                'verbose_name': 'Shop Informations',
                'verbose_name_plural': 'Shop Informations',
            },
        ),
        migrations.CreateModel(
            name='MiniLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('lat', models.FloatField(verbose_name='Latitude')),
                ('lon', models.FloatField(verbose_name='Longitude')),
                ('main_city', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='management.CityData')),
            ],
            options={
                'verbose_name': 'Mini Locations',
                'verbose_name_plural': 'Mini Locations',
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_at', models.CharField(choices=[('0', 'Twice a day'), ('1', 'Daily'), ('2', 'Weekly'), ('3', 'Fortnight'), ('4', 'Monthly'), ('5', 'I will handle')], default='5', max_length=50, verbose_name='Phamplet will change')),
                ('company_name', models.CharField(blank=True, max_length=300)),
                ('icon_category', models.CharField(choices=[('1', 'Fashion'), ('2', 'Property'), ('3', 'Electronics'), ('4', 'Food & Restaurant'), ('5', 'Supermarket'), ('6', 'Service')], default='1', max_length=50)),
                ('heading', models.CharField(max_length=300, verbose_name='Heading')),
                ('phone_number', models.CharField(max_length=1000, verbose_name='Phone Number')),
                ('whatsapp_link', models.URLField(blank=True, max_length=1000, verbose_name='Whatsapp URL')),
                ('img', models.ImageField(upload_to='img/', verbose_name='Image 1')),
                ('img1', models.ImageField(blank=True, upload_to='img/', verbose_name='Image 2')),
                ('img2', models.ImageField(blank=True, upload_to='img/', verbose_name='Image 3')),
                ('img3', models.ImageField(blank=True, upload_to='img/', verbose_name='Image 4')),
                ('img4', models.ImageField(blank=True, upload_to='img/', verbose_name='Image 5')),
                ('img5', models.ImageField(blank=True, upload_to='img/', verbose_name='Image 6')),
                ('img6', models.ImageField(blank=True, upload_to='img/', verbose_name='Image 7')),
                ('img7', models.ImageField(blank=True, upload_to='img/', verbose_name='Image 8')),
                ('img8', models.ImageField(blank=True, upload_to='img/', verbose_name='Image 9')),
                ('img9', models.ImageField(blank=True, upload_to='img/', verbose_name='Image 10')),
                ('location', models.URLField(blank=True, max_length=50000, verbose_name='Google Location URL')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=False)),
                ('activated_till', models.DateField(default=django.utils.timezone.now)),
                ('facebook_link', models.URLField(blank=True, max_length=2000, verbose_name='Facebook Link')),
                ('instagram_link', models.URLField(blank=True, max_length=2000, verbose_name='Instagram Link')),
                ('youtube_link', models.URLField(blank=True, max_length=2000, verbose_name='Youtube Link')),
                ('keywords', models.TextField(blank=True)),
                ('counter', models.IntegerField(default=0)),
                ('active_image', models.IntegerField(default=0)),
                ('last_date', models.DateField(default=django.utils.timezone.now)),
                ('rating', models.FloatField(default=5, verbose_name='Rating')),
                ('MiniLocation', models.ManyToManyField(to='management.MiniLocation')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Category')),
                ('city', models.ManyToManyField(to='management.CityData')),
                ('comes_under', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comes_under', to=settings.AUTH_USER_MODEL, verbose_name='Salesperson')),
                ('package_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='management.PackageType')),
                ('rated_by', models.ManyToManyField(blank=True, related_name='rated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Shopkeeper')),
            ],
            options={
                'verbose_name': 'Offers',
                'verbose_name_plural': 'Offers',
            },
        ),
        migrations.CreateModel(
            name='CouponHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10)),
                ('status', models.BooleanField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('expiry_date', models.DateTimeField(null=True)),
                ('ad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='management.Files')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'All Coupon History',
                'verbose_name_plural': 'All Coupon History',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(auto_now_add=True)),
                ('total_coupon', models.IntegerField(default=5)),
                ('active', models.BooleanField(default=True)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Files')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Coupons',
                'verbose_name_plural': 'Coupons',
            },
        ),
    ]
